const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–±–æ—Ä–æ–∫
class UniversalStaticGenerator {
  constructor(projectConfig) {
    this.config = {
      // –ü—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
      projectRoot: projectConfig.projectRoot || process.cwd(),
      clientDir: projectConfig.clientDir || 'client',
      serverDir: projectConfig.serverDir || 'server', 
      distDir: projectConfig.distDir || 'dist/public',
      
      // –¢–∏–ø—ã —Ü–µ–ª–µ–≤—ã—Ö —Ö–æ—Å—Ç–∏–Ω–≥–æ–≤
      targets: projectConfig.targets || ['static', 'php', 'vercel', 'netlify'],
      
      // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
      projectName: projectConfig.projectName || 'static-site',
      apiRoutes: projectConfig.apiRoutes || [],
      hasAuth: projectConfig.hasAuth || false,
      hasAdmin: projectConfig.hasAdmin || false,
      hasUploads: projectConfig.hasUploads || false,
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∫–∏
      buildCommand: projectConfig.buildCommand || 'npm run build',
      outputDir: projectConfig.outputDir || 'static-bundles',
      
      ...projectConfig
    };
    
    this.colors = {
      reset: '\x1b[0m',
      red: '\x1b[31m',
      green: '\x1b[32m',
      yellow: '\x1b[33m',
      blue: '\x1b[34m',
      magenta: '\x1b[35m',
      cyan: '\x1b[36m',
      white: '\x1b[37m',
    };
  }

  log(message, type = 'info') {
    const timestamp = new Date().toLocaleTimeString();
    const color = {
      info: this.colors.cyan,
      success: this.colors.green,
      warning: this.colors.yellow,
      error: this.colors.red
    }[type] || this.colors.white;
    
    console.log(`${color}[${timestamp}] ${message}${this.colors.reset}`);
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  async generateStaticBundles() {
    try {
      this.log('üöÄ –ó–∞–ø—É—Å–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–±–æ—Ä–æ–∫', 'info');
      
      // –®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
      await this.analyzeProject();
      
      // –®–∞–≥ 2: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
      await this.buildProject();
      
      // –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞
      for (const target of this.config.targets) {
        await this.generateForTarget(target);
      }
      
      // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
      await this.generateDocumentation();
      
      this.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'success');
      
    } catch (error) {
      this.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`, 'error');
      throw error;
    }
  }

  // –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
  async analyzeProject() {
    this.log('üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...', 'info');
    
    const projectStructure = {
      hasClient: fs.existsSync(path.join(this.config.projectRoot, this.config.clientDir)),
      hasServer: fs.existsSync(path.join(this.config.projectRoot, this.config.serverDir)),
      hasPackageJson: fs.existsSync(path.join(this.config.projectRoot, 'package.json')),
      hasViteConfig: fs.existsSync(path.join(this.config.projectRoot, 'vite.config.ts')) || 
                     fs.existsSync(path.join(this.config.projectRoot, 'vite.config.js')),
      hasTailwind: fs.existsSync(path.join(this.config.projectRoot, 'tailwind.config.ts')) ||
                   fs.existsSync(path.join(this.config.projectRoot, 'tailwind.config.js')),
    };
    
    // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ API –º–∞—Ä—à—Ä—É—Ç–æ–≤
    if (projectStructure.hasServer) {
      this.config.apiRoutes = await this.discoverApiRoutes();
    }
    
    this.log(`üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞`, 'success');
    this.projectStructure = projectStructure;
  }

  // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ API –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞
  async discoverApiRoutes() {
    const routesFile = path.join(this.config.projectRoot, this.config.serverDir, 'routes.ts');
    const routes = [];
    
    if (fs.existsSync(routesFile)) {
      const content = fs.readFileSync(routesFile, 'utf8');
      
      // –ü—Ä–æ—Å—Ç–æ–µ –ø–∞—Ä—Å–∏–Ω–≥ –º–∞—Ä—à—Ä—É—Ç–æ–≤ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
      const routePatterns = [
        /app\.(get|post|put|delete)\(['"]\/api\/([^'"]+)['"]/g,
        /router\.(get|post|put|delete)\(['"]\/([^'"]+)['"]/g
      ];
      
      routePatterns.forEach(pattern => {
        let match;
        while ((match = pattern.exec(content)) !== null) {
          routes.push({
            method: match[1].toUpperCase(),
            path: match[2],
            needsAuth: content.includes('requireAuth') || content.includes('isAuthenticated')
          });
        }
      });
    }
    
    return routes;
  }

  // –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
  async buildProject() {
    this.log('üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...', 'info');
    
    try {
      execSync(this.config.buildCommand, { 
        stdio: 'inherit',
        cwd: this.config.projectRoot 
      });
      this.log('‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'success');
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: ${error.message}`);
    }
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞
  async generateForTarget(target) {
    this.log(`üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è ${target}...`, 'info');
    
    const targetDir = path.join(this.config.projectRoot, this.config.outputDir, target);
    
    // –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if (fs.existsSync(targetDir)) {
      fs.rmSync(targetDir, { recursive: true, force: true });
    }
    fs.mkdirSync(targetDir, { recursive: true });
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    const distPath = path.join(this.config.projectRoot, this.config.distDir);
    if (fs.existsSync(distPath)) {
      this.copyDirectory(distPath, targetDir);
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞ —Ñ–∞–π–ª—ã
    switch (target) {
      case 'static':
        await this.generateStaticHosting(targetDir);
        break;
      case 'php':
        await this.generatePhpHosting(targetDir);
        break;
      case 'vercel':
        await this.generateVercelHosting(targetDir);
        break;
      case 'netlify':
        await this.generateNetlifyHosting(targetDir);
        break;
      case 'apache':
        await this.generateApacheHosting(targetDir);
        break;
      case 'nginx':
        await this.generateNginxHosting(targetDir);
        break;
    }
    
    this.log(`‚úÖ ${target} —Å–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞ –≤ ${targetDir}`, 'success');
  }

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ö–æ—Å—Ç–∏–Ω–≥ (Timeweb, –æ–±—ã—á–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥)
  async generateStaticHosting(targetDir) {
    // –ü—Ä–æ—Å—Ç–æ–π .htaccess –¥–ª—è Apache
    const htaccess = `RewriteEngine On
RewriteBase /
RewriteRule ^index\\.html$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.html [L]

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
<IfModule mod_expires.c>
  ExpiresActive on
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/jpg "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
</IfModule>`;

    fs.writeFileSync(path.join(targetDir, '.htaccess'), htaccess);
    
    // README –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞
    const readme = this.generateReadme('static');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // PHP —Ö–æ—Å—Ç–∏–Ω–≥
  async generatePhpHosting(targetDir) {
    // –ö–æ–ø–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—É—é PHP —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    const phpSourceDir = path.join(this.config.projectRoot, 'php-hosting');
    if (fs.existsSync(phpSourceDir)) {
      this.copyDirectory(phpSourceDir, targetDir);
      return;
    }
    
    // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é PHP —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
    const phpIndex = `<?php
// –ü—Ä–æ—Å—Ç–æ–π PHP —Ä–æ—É—Ç–µ—Ä –¥–ª—è SPA
header('Content-Type: text/html; charset=utf-8');

$request_uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);

// API —Ä–æ—É—Ç–∏–Ω–≥ (–∑–∞–≥–ª—É—à–∫–∏)
if (strpos($request_uri, '/api/') === 0) {
    header('Content-Type: application/json');
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ API endpoints
    switch ($request_uri) {
        case '/api/doctor':
            echo json_encode([
                'name' => '–í—Ä–∞—á',
                'specialization' => '–û—Å—Ç–µ–æ–ø–∞—Ç',
                'experience' => '10+ –ª–µ—Ç'
            ]);
            break;
            
        case '/api/services':
            echo json_encode([
                ['id' => 1, 'title' => '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', 'price' => '–ü–æ –∑–∞–ø—Ä–æ—Å—É'],
                ['id' => 2, 'title' => '–õ–µ—á–µ–Ω–∏–µ', 'price' => '–ü–æ –∑–∞–ø—Ä–æ—Å—É']
            ]);
            break;
            
        default:
            http_response_code(404);
            echo json_encode(['error' => 'API endpoint not found']);
    }
    exit;
}

// –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–¥–∞–µ–º index.html
readfile(__DIR__ . '/index.html');
?>`;

    fs.writeFileSync(path.join(targetDir, 'index.php'), phpIndex);
    
    // .htaccess –¥–ª—è PHP
    const htaccess = `RewriteEngine On
RewriteBase /

# API –∑–∞–ø—Ä–æ—Å—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è index.php
RewriteRule ^api/(.*)$ index.php [QSA,L]

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^(.*)$ $1 [L]

# –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ - –Ω–∞ index.php
RewriteRule ^(.*)$ index.php [QSA,L]`;

    fs.writeFileSync(path.join(targetDir, '.htaccess'), htaccess);
    
    const readme = this.generateReadme('php');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // Vercel —Ö–æ—Å—Ç–∏–Ω–≥
  async generateVercelHosting(targetDir) {
    const vercelConfig = {
      version: 2,
      builds: [
        {
          src: "package.json",
          use: "@vercel/static-build"
        }
      ],
      routes: [
        {
          src: "/api/(.*)",
          dest: "/api.js"
        },
        {
          src: "/(.*)",
          dest: "/index.html"
        }
      ]
    };
    
    fs.writeFileSync(path.join(targetDir, 'vercel.json'), JSON.stringify(vercelConfig, null, 2));
    
    // –ü—Ä–æ—Å—Ç–æ–π API –¥–ª—è Vercel
    const vercelApi = `export default function handler(req, res) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  // –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–ª—É—à–∫–∏ API
  const { query } = req;
  const endpoint = query.api?.[0] || '';
  
  switch (endpoint) {
    case 'doctor':
      res.json({ name: '–í—Ä–∞—á', specialization: '–û—Å—Ç–µ–æ–ø–∞—Ç' });
      break;
    case 'services':
      res.json([{ id: 1, title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', price: '–ü–æ –∑–∞–ø—Ä–æ—Å—É' }]);
      break;
    default:
      res.status(404).json({ error: 'API endpoint not found' });
  }
}`;

    const apiDir = path.join(targetDir, 'api');
    if (!fs.existsSync(apiDir)) {
      fs.mkdirSync(apiDir);
    }
    fs.writeFileSync(path.join(apiDir, '[...api].js'), vercelApi);
    
    const readme = this.generateReadme('vercel');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // Netlify —Ö–æ—Å—Ç–∏–Ω–≥
  async generateNetlifyHosting(targetDir) {
    // _redirects –¥–ª—è Netlify
    const redirects = `# SPA –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
/api/* /.netlify/functions/api 200
/* /index.html 200`;

    fs.writeFileSync(path.join(targetDir, '_redirects'), redirects);
    
    // Netlify —Ñ—É–Ω–∫—Ü–∏—è
    const netlifyFunction = `exports.handler = async (event, context) => {
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE'
  };
  
  if (event.httpMethod === 'OPTIONS') {
    return { statusCode: 200, headers };
  }
  
  const path = event.path.replace('/.netlify/functions/api', '');
  
  // –ë–∞–∑–æ–≤—ã–µ API endpoints
  switch (path) {
    case '/doctor':
      return {
        statusCode: 200,
        headers,
        body: JSON.stringify({ name: '–í—Ä–∞—á', specialization: '–û—Å—Ç–µ–æ–ø–∞—Ç' })
      };
    case '/services':
      return {
        statusCode: 200,
        headers,
        body: JSON.stringify([{ id: 1, title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', price: '–ü–æ –∑–∞–ø—Ä–æ—Å—É' }])
      };
    default:
      return {
        statusCode: 404,
        headers,
        body: JSON.stringify({ error: 'API endpoint not found' })
      };
  }
};`;

    const functionsDir = path.join(targetDir, '.netlify', 'functions');
    fs.mkdirSync(functionsDir, { recursive: true });
    fs.writeFileSync(path.join(functionsDir, 'api.js'), netlifyFunction);
    
    const readme = this.generateReadme('netlify');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // Apache —Ö–æ—Å—Ç–∏–Ω–≥
  async generateApacheHosting(targetDir) {
    const htaccess = `# Apache –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è SPA
RewriteEngine On
RewriteBase /

# –û–±—Ä–∞–±–æ—Ç–∫–∞ API (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å)
RewriteRule ^api/(.*)$ api.php?route=$1 [QSA,L]

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^.*$ - [L]

# SPA fallback
RewriteRule ^.*$ /index.html [L]

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
<Files ".env">
  Order Allow,Deny
  Deny from all
</Files>

# –°–∂–∞—Ç–∏–µ
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/css text/javascript application/javascript application/json
</IfModule>

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType image/* "access plus 1 year"
</IfModule>`;

    fs.writeFileSync(path.join(targetDir, '.htaccess'), htaccess);
    
    const readme = this.generateReadme('apache');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // Nginx —Ö–æ—Å—Ç–∏–Ω–≥
  async generateNginxHosting(targetDir) {
    const nginxConfig = `# Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è SPA
server {
    listen 80;
    server_name yourdomain.com;
    root ${targetDir};
    index index.html;

    # –õ–æ–≥–∏
    access_log /var/log/nginx/spa_access.log;
    error_log /var/log/nginx/spa_error.log;

    # API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    location /api/ {
        try_files $uri $uri/ /api.php?$query_string;
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    location ~ /\\. {
        deny all;
    }
}`;

    fs.writeFileSync(path.join(targetDir, 'nginx.conf'), nginxConfig);
    
    const readme = this.generateReadme('nginx');
    fs.writeFileSync(path.join(targetDir, 'README.md'), readme);
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è README —Ñ–∞–π–ª–∞
  generateReadme(target) {
    const targetNames = {
      static: '–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ö–æ—Å—Ç–∏–Ω–≥',
      php: 'PHP —Ö–æ—Å—Ç–∏–Ω–≥',
      vercel: 'Vercel',
      netlify: 'Netlify',
      apache: 'Apache',
      nginx: 'Nginx'
    };

    const instructions = {
      static: `1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –≤–∞—à —Ö–æ—Å—Ç–∏–Ω–≥
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .htaccess —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ mod_rewrite –≤–∫–ª—é—á–µ–Ω –≤ Apache
4. –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`,
      
      php: `1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ PHP —Ö–æ—Å—Ç–∏–Ω–≥
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PHP 7.0+ –¥–æ—Å—Ç—É–ø–µ–Ω
3. –°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data, uploads —Å –ø—Ä–∞–≤–∞–º–∏ 777
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .htaccess –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
5. API –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ PHP`,
      
      vercel: `1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫ Vercel
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ vercel.json –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
3. –î–µ–ø–ª–æ–π –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
4. API —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å serverless`,
      
      netlify: `1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫ Netlify
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ _redirects —Ñ–∞–π–ª –Ω–∞ –º–µ—Å—Ç–µ
3. Netlify Functions –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å API
4. –î–µ–ø–ª–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π`,
      
      apache: `1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ Apache —Å–µ—Ä–≤–µ—Ä
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ mod_rewrite –≤–∫–ª—é—á–µ–Ω
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .htaccess —Ñ–∞–π–ª
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞`,
      
      nginx: `1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ nginx.conf –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Nginx
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º`
    };

    return `# ${this.config.projectName} - ${targetNames[target]}

## –û–ø–∏—Å–∞–Ω–∏–µ
–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ ${this.config.projectName} –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –Ω–∞ ${targetNames[target]}.

## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é

${instructions[target]}

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤
- \`index.html\` - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- \`assets/\` - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
${target === 'php' ? '- `api.php` - PHP API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤\n- `data/` - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö' : ''}
${target === 'vercel' ? '- `vercel.json` - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel\n- `api/` - serverless —Ñ—É–Ω–∫—Ü–∏–∏' : ''}
${target === 'netlify' ? '- `_redirects` - –ø—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n- `.netlify/functions/` - Netlify —Ñ—É–Ω–∫—Ü–∏–∏' : ''}

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
${this.config.hasAuth ? '- –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞' : '- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏'}
${this.config.hasAdmin ? '- –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞' : '- –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏'}
${this.config.hasUploads ? '- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' : '- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏'}

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞
–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
2. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º
3. –õ–æ–≥–∏ –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞

–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toLocaleString('ru-RU')}
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: Universal Static Generator v1.0
`;
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  async generateDocumentation() {
    this.log('üìö –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...', 'info');
    
    const docsDir = path.join(this.config.projectRoot, this.config.outputDir, '_docs');
    fs.mkdirSync(docsDir, { recursive: true });
    
    // –ì–ª–∞–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    const mainDocs = `# ${this.config.projectName} - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–±–æ—Ä–∫–∏

## –û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–±–æ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ö–æ—Å—Ç–∏–Ω–≥–æ–≤.

## –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–±–æ—Ä–∫–∏

${this.config.targets.map(target => `- **${target}**: –≥–æ—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –≤ –ø–∞–ø–∫–µ \`${target}/\``).join('\n')}

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

- **–ö–ª–∏–µ–Ω—Ç**: ${this.projectStructure?.hasClient ? 'React SPA —Å Vite' : '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω'}
- **–°–µ—Ä–≤–µ—Ä**: ${this.projectStructure?.hasServer ? 'Node.js/Express API' : '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω'}
- **–°—Ç–∏–ª–∏**: ${this.projectStructure?.hasTailwind ? 'Tailwind CSS' : '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ CSS'}
- **–°–±–æ—Ä—â–∏–∫**: ${this.projectStructure?.hasViteConfig ? 'Vite' : '–î—Ä—É–≥–æ–π'}

## API Endpoints

${this.config.apiRoutes.length > 0 
  ? this.config.apiRoutes.map(route => `- **${route.method}** \`${route.path}\`${route.needsAuth ? ' (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)' : ''}`).join('\n')
  : 'API endpoints –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã'
}

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ö–æ—Å—Ç–∏–Ω–≥—É

1. **–î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–∞–π—Ç–æ–≤**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`static\` —Å–±–æ—Ä–∫—É
2. **–î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`php\` —Å–±–æ—Ä–∫—É
3. **–î–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`vercel\` –∏–ª–∏ \`netlify\`
4. **–î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`apache\` –∏–ª–∏ \`nginx\`

## –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: Universal Static Generator v1.0
- –î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toLocaleString('ru-RU')}
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞: ${JSON.stringify(this.config, null, 2)}

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞

\`\`\`javascript
const generator = new UniversalStaticGenerator({
  projectRoot: '/path/to/project',
  targets: ['static', 'php', 'vercel'],
  projectName: 'My Project',
  hasAuth: true,
  hasAdmin: true
});

await generator.generateStaticBundles();
\`\`\`
`;

    fs.writeFileSync(path.join(docsDir, 'README.md'), mainDocs);
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    const config = {
      ...this.config,
      generated: new Date().toISOString(),
      projectStructure: this.projectStructure
    };
    
    fs.writeFileSync(path.join(docsDir, 'generator-config.json'), JSON.stringify(config, null, 2));
    
    this.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞', 'success');
  }

  // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  copyDirectory(src, dest) {
    if (!fs.existsSync(dest)) {
      fs.mkdirSync(dest, { recursive: true });
    }
    
    const files = fs.readdirSync(src);
    
    for (const file of files) {
      const srcPath = path.join(src, file);
      const destPath = path.join(dest, file);
      
      if (fs.statSync(srcPath).isDirectory()) {
        this.copyDirectory(srcPath, destPath);
      } else {
        fs.copyFileSync(srcPath, destPath);
      }
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–±–æ—Ä–∫–∏
  async createArchives() {
    this.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–æ–≤...', 'info');
    
    for (const target of this.config.targets) {
      const targetDir = path.join(this.config.projectRoot, this.config.outputDir, target);
      const archiveName = `${this.config.projectName}-${target}.zip`;
      const archivePath = path.join(this.config.projectRoot, this.config.outputDir, archiveName);
      
      if (fs.existsSync(targetDir)) {
        try {
          const currentDir = process.cwd();
          process.chdir(targetDir);
          execSync(`powershell Compress-Archive -Path ./* -DestinationPath "${archivePath}" -Force`);
          process.chdir(currentDir);
          
          this.log(`üì¶ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: ${archiveName}`, 'success');
        } catch (error) {
          this.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ –¥–ª—è ${target}: ${error.message}`, 'warning');
        }
      }
    }
  }
}

module.exports = UniversalStaticGenerator;